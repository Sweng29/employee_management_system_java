/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.payroll.business;

import com.payroll.dao.MeetingDAO;
import com.payroll.daoimpl.MeetingDAOImpl;
import com.payroll.models.Meeting;
import com.payroll.models.User;
import com.payroll.utility.CommonMethods;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Kashif Alei
 */
public class MeetingFrame extends javax.swing.JFrame {

    /**
     * Creates new form MeetingFrame
     */
    private MeetingDAOImpl meetingDAO = new MeetingDAOImpl();
    private Integer selectedRow = -1;
    private String pattern = "yyyy-MM-dd";
    private SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
    
    public MeetingFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.updateMeetingBtn.setEnabled(false);
        this.meetingTitleField.requestFocus();
        populateMeetings();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        deleteMeeting = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        meetingSearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        meetingTable = new javax.swing.JTable();
        addMeetingBtn = new javax.swing.JLabel();
        updateMeetingBtn = new javax.swing.JLabel();
        resetBtn = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        agendaField = new javax.swing.JTextArea();
        meetingDateField = new com.toedter.calendar.JDateChooser();
        meetingTitleField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        deleteMeeting.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        deleteMeeting.setText("Delete Meeting");
        deleteMeeting.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteMeeting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMeetingActionPerformed(evt);
            }
        });
        jPopupMenu1.add(deleteMeeting);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(53, 168, 83));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Meetings");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("X");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(552, 552, 552)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 554, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 70));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Search Meeting");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 40, -1, 26));

        meetingSearch.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        meetingSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meetingSearchActionPerformed(evt);
            }
        });
        meetingSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                meetingSearchKeyReleased(evt);
            }
        });
        jPanel2.add(meetingSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 40, 220, -1));

        meetingTable.setFont(new java.awt.Font("Century Gothic", 0, 17)); // NOI18N
        meetingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        meetingTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        meetingTable.setRowHeight(20);
        meetingTable.setSelectionBackground(new java.awt.Color(11, 18, 29));
        meetingTable.setSelectionForeground(new java.awt.Color(140, 198, 62));
        meetingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meetingTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                meetingTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(meetingTable);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 75, 980, 580));

        addMeetingBtn.setBackground(new java.awt.Color(53, 168, 83));
        addMeetingBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        addMeetingBtn.setForeground(new java.awt.Color(255, 255, 255));
        addMeetingBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addMeetingBtn.setText("Add Meeting");
        addMeetingBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addMeetingBtn.setOpaque(true);
        addMeetingBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMeetingBtnMouseClicked(evt);
            }
        });
        jPanel2.add(addMeetingBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 138, 34));

        updateMeetingBtn.setBackground(new java.awt.Color(53, 168, 83));
        updateMeetingBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        updateMeetingBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateMeetingBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updateMeetingBtn.setText("Update Meeting");
        updateMeetingBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateMeetingBtn.setOpaque(true);
        updateMeetingBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMeetingBtnMouseClicked(evt);
            }
        });
        jPanel2.add(updateMeetingBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 440, 152, 34));

        resetBtn.setBackground(new java.awt.Color(53, 168, 83));
        resetBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        resetBtn.setForeground(new java.awt.Color(255, 255, 255));
        resetBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resetBtn.setText("Reset");
        resetBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetBtn.setOpaque(true);
        resetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetBtnMouseClicked(evt);
            }
        });
        jPanel2.add(resetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 300, 30));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Agenda/Note.");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 110, -1));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Meeting date.");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, 30));

        agendaField.setColumns(20);
        agendaField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        agendaField.setRows(5);
        jScrollPane1.setViewportView(agendaField);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 280, 200, 90));

        meetingDateField.setDateFormatString("yyyy-MM-dd");
        meetingDateField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel2.add(meetingDateField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 200, 30));

        meetingTitleField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jPanel2.add(meetingTitleField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 200, -1));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Meeting title.");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1370, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void meetingSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meetingSearchActionPerformed
        CommonMethods.searchFromTable(meetingTable, meetingSearch);
    }//GEN-LAST:event_meetingSearchActionPerformed

    private void meetingSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_meetingSearchKeyReleased
        CommonMethods.searchFromTable(meetingTable, meetingSearch);
    }//GEN-LAST:event_meetingSearchKeyReleased

    private void meetingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_meetingTableMouseClicked
        addMeetingBtn.setEnabled(false);
        updateMeetingBtn.setEnabled(true);
        selectedRow = meetingTable.getSelectedRow();

        if (selectedRow > -1) {
            selectedRow = (Integer) meetingTable.getValueAt(meetingTable.getSelectedRow(), 0);
            String meetingTitle = (String) meetingTable.getValueAt(meetingTable.getSelectedRow(), 1);
            Date leaveDate = (Date) meetingTable.getValueAt(meetingTable.getSelectedRow(), 2);
            String reason = (String) meetingTable.getValueAt(meetingTable.getSelectedRow(), 3);

            meetingTitleField.setText(meetingTitle);
            meetingDateField.setDate(leaveDate);
            agendaField.setText(reason);

            meetingTable.clearSelection();
            addMeetingBtn.setEnabled(false);
        }
    }//GEN-LAST:event_meetingTableMouseClicked

    private void meetingTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_meetingTableMouseReleased
        if (evt.isPopupTrigger()) {
            jPopupMenu1.show(meetingTable, evt.getX(), evt.getY());
        }        // TODO add your handling code here:
    }//GEN-LAST:event_meetingTableMouseReleased

    private void addMeetingBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMeetingBtnMouseClicked
        if(addMeetingBtn.isEnabled()){
            try {
                Date meetingDate = meetingDateField.getDate();
                String reason = agendaField.getText().trim();
                String meetingTitlte = meetingTitleField.getText().trim();
                
                Meeting meeting = new Meeting();
                String date = simpleDateFormat.format(meetingDate);
                meeting.setMeetingDate(simpleDateFormat.parse(date));
                meeting.setMeetingAgenda(reason);
                meeting.setMeetingTitle(meetingTitlte);
                
               
                if(meetingDate ==null || reason.trim().isEmpty() || meetingTitlte.trim().isEmpty())
                {
                    new MessageForm("Error","Some fields are missing.","error.png").setVisible(true);
                    return;
                }
                int check = meetingDAO.save(meeting);
                if(check>0)
                {
                    populateMeetings();
                    clearFields();
                    new MessageForm("Success","Meeting has been added successfully.","info.png").setVisible(true);
                }else
                {
                    new MessageForm("Error","Could not save the meeting, try again.","error.png").setVisible(true);
                }
            } catch (ParseException ex) {
                Logger.getLogger(UserLeaveFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_addMeetingBtnMouseClicked

    private void updateMeetingBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMeetingBtnMouseClicked
        if (updateMeetingBtn.isEnabled()) {
            if (selectedRow > -1) {

                Integer id = selectedRow;

                if (id > -1) {
                    try {
                
                        Date meetingDate = meetingDateField.getDate();
                        String reason = agendaField.getText().trim();
                        String meetingTitlte = meetingTitleField.getText().trim();

                        Meeting meeting = new Meeting();
                        String date = simpleDateFormat.format(meetingDate);
                        meeting.setMeetingDate(simpleDateFormat.parse(date));
                        meeting.setMeetingAgenda(reason);
                        meeting.setMeetingTitle(meetingTitlte);
                        meeting.setMeetingId(id);

                        if (meetingDate == null || reason.trim().isEmpty() || meetingTitlte.trim().isEmpty()) {
                            new MessageForm("Error", "Some fields are missing.", "error.png").setVisible(true);
                            return;
                        }

                        int check = meetingDAO.update(meeting);

                        if(check>0)
                        {
                            populateMeetings();
                            clearFields();
                            new MessageForm("Success","Meeting has been updated successfully.","info.png").setVisible(true);
                        }else
                        {
                            new MessageForm("Error","Could not update the meeting, try again.","error.png").setVisible(true);
                        }
                    } catch (ParseException ex) {
                        Logger.getLogger(UserLeaveFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } else {
                    new MessageForm("Error", "Please select record", "error.png").setVisible(true);
                }
            } else {
                new MessageForm("Error", "Please select record", "error.png").setVisible(true);
            }
        }
    }//GEN-LAST:event_updateMeetingBtnMouseClicked

    private void resetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseClicked
        clearFields();
    }//GEN-LAST:event_resetBtnMouseClicked

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked

    }//GEN-LAST:event_jPanel2MouseClicked

    private void deleteMeetingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMeetingActionPerformed
        if (selectedRow > -1) {
            Integer id = selectedRow;//(Integer) userTable.getValueAt(userTable.getSelectedRow(), 0);
            int check = meetingDAO.delete(id);
            if(check>0)
            {
                new MessageForm("Error", "Record has been deleted", "info.png").setVisible(true);
                clearFields();
                populateMeetings();
            }else
            {
                new MessageForm("Error", "Colud not delete record,try again.", "error.png").setVisible(true);
            }
        } else {
            new MessageForm("Error", "Please select record", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_deleteMeetingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MeetingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MeetingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MeetingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MeetingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MeetingFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addMeetingBtn;
    private javax.swing.JTextArea agendaField;
    private javax.swing.JMenuItem deleteMeeting;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser meetingDateField;
    private javax.swing.JTextField meetingSearch;
    private javax.swing.JTable meetingTable;
    private javax.swing.JTextField meetingTitleField;
    private javax.swing.JLabel resetBtn;
    private javax.swing.JLabel updateMeetingBtn;
    // End of variables declaration//GEN-END:variables

    private void populateMeetings() {
        ResultSet resultSet = new MeetingDAOImpl().findAll();
        CommonMethods.fillTables(resultSet, meetingTable, jScrollPane2, this);
    }

    private void clearFields() {
        this.meetingDateField.setCalendar(null);
        this.meetingTitleField.setText("");
        this.agendaField.setText("");
        this.updateMeetingBtn.setEnabled(false);
        this.addMeetingBtn.setEnabled(true);
        this.meetingTitleField.requestFocus();
    }
}
