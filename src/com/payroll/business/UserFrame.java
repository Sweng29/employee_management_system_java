/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.payroll.business;

import com.payroll.dao.UserDAO;
import com.payroll.daoimpl.UserDaoImpl;
import com.payroll.models.User;
import com.payroll.utility.CommonMethods;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author Kashif Ali
 */
public class UserFrame extends javax.swing.JFrame {

    UserDaoImpl userDaoImpl = null;
    int selectedRow = -1;
    /**
     * Creates new form EmployeesFrame
     */
    public UserFrame() {
        initComponents();
        userDaoImpl = new UserDaoImpl();
        this.setLocationRelativeTo(null);
        fillDataIntoUserTable();
        updateUserBtn.setEnabled(false);
        firstNameField.requestFocus();
    }

    private void fillDataIntoUserTable() {
        CommonMethods.fillTables(userDaoImpl.findAll(), userTable, jScrollPane2, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        deleteEmployee = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        employeeSearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        addUserBtn = new javax.swing.JLabel();
        updateUserBtn = new javax.swing.JLabel();
        resetBtn = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        confirmPasswordField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        phoneNoField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressField = new javax.swing.JTextArea();
        userTypeCombo = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();

        deleteEmployee.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        deleteEmployee.setText("Delete User");
        deleteEmployee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEmployeeActionPerformed(evt);
            }
        });
        jPopupMenu1.add(deleteEmployee);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(53, 168, 83));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Employee");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("X");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(525, 525, 525)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 581, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 70));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Search Employee");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 40, -1, 26));

        employeeSearch.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        employeeSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeSearchActionPerformed(evt);
            }
        });
        employeeSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                employeeSearchKeyReleased(evt);
            }
        });
        jPanel2.add(employeeSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 40, 220, -1));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("First name");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Last Name");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        firstNameField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jPanel2.add(firstNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 188, -1));

        userTable.setFont(new java.awt.Font("Century Gothic", 0, 17)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        userTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        userTable.setRowHeight(20);
        userTable.setSelectionBackground(new java.awt.Color(11, 18, 29));
        userTable.setSelectionForeground(new java.awt.Color(140, 198, 62));
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                userTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(userTable);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 75, 980, 580));

        addUserBtn.setBackground(new java.awt.Color(53, 168, 83));
        addUserBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        addUserBtn.setForeground(new java.awt.Color(255, 255, 255));
        addUserBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addUserBtn.setText("Add User");
        addUserBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addUserBtn.setOpaque(true);
        addUserBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUserBtnMouseClicked(evt);
            }
        });
        jPanel2.add(addUserBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, 138, 34));

        updateUserBtn.setBackground(new java.awt.Color(53, 168, 83));
        updateUserBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        updateUserBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateUserBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updateUserBtn.setText("Update User");
        updateUserBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateUserBtn.setOpaque(true);
        updateUserBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateUserBtnMouseClicked(evt);
            }
        });
        jPanel2.add(updateUserBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 560, 152, 34));

        resetBtn.setBackground(new java.awt.Color(53, 168, 83));
        resetBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        resetBtn.setForeground(new java.awt.Color(255, 255, 255));
        resetBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resetBtn.setText("Reset");
        resetBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetBtn.setOpaque(true);
        resetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetBtnMouseClicked(evt);
            }
        });
        jPanel2.add(resetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 620, 300, 30));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Email");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        emailField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jPanel2.add(emailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 188, -1));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Password");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        passwordField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jPanel2.add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, 188, -1));

        confirmPasswordField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jPanel2.add(confirmPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 188, -1));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Confirm Password");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        phoneNoField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jPanel2.add(phoneNoField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 188, -1));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Address");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, -1, -1));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("User Type.");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, -1));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Phone No.");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        addressField.setColumns(20);
        addressField.setRows(5);
        jScrollPane1.setViewportView(addressField);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 450, 200, 90));

        userTypeCombo.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        userTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User type", "Admin", "Accountant", "HR" }));
        userTypeCombo.setToolTipText("");
        jPanel2.add(userTypeCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 380, 190, 30));

        jLabel14.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Username");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        usernameField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jPanel2.add(usernameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 188, -1));

        lastNameField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jPanel2.add(lastNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 188, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1370, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void employeeSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeSearchActionPerformed
        // TODO add your handlinguserUsername}//GEN-LAST:event_employeeSearchActionPerformed
    }

    private void clearFields() {
        firstNameField.setText("");
        lastNameField.setText("");
        usernameField.setText("");
        emailField.setText("");
        passwordField.setText("");
        confirmPasswordField.setText("");
        userTypeCombo.setSelectedIndex(0);
        addressField.setText("");
        phoneNoField.setText("");
        
        userTable.clearSelection();
        addUserBtn.setEnabled(true);
        usernameField.setEditable(true);
        emailField.setEditable(true);
        updateUserBtn.setEnabled(false);
        selectedRow = -1;
        firstNameField.setRequestFocusEnabled(true);
    }

    private void employeeSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeSearchKeyReleased
        CommonMethods.searchFromTable(userTable, employeeSearch);
    }//GEN-LAST:event_employeeSearchKeyReleased

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked

    }//GEN-LAST:event_jPanel2MouseClicked


    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        addUserBtn.setEnabled(false);
        updateUserBtn.setEnabled(true);
        selectedRow = userTable.getSelectedRow();

        if (selectedRow > -1) {
            selectedRow = (Integer) userTable.getValueAt(userTable.getSelectedRow(), 0);
            String username = (String) userTable.getValueAt(userTable.getSelectedRow(), 1);
            String firstName = (String) userTable.getValueAt(userTable.getSelectedRow(), 2);
            String lastName = (String) userTable.getValueAt(userTable.getSelectedRow(), 3);
            String email = (String) userTable.getValueAt(userTable.getSelectedRow(), 4);
            String address = (String) userTable.getValueAt(userTable.getSelectedRow(), 5);
            String phoneNo = (String) userTable.getValueAt(userTable.getSelectedRow(), 6);
            String userType = (String) userTable.getValueAt(userTable.getSelectedRow(), 7);
            
            firstNameField.setText(firstName);
            lastNameField.setText(lastName);
            usernameField.setText(username);
            emailField.setText(email);
            userTypeCombo.setSelectedItem(userType);
            addressField.setText(address);
            phoneNoField.setText(phoneNo);

            userTable.clearSelection();
            addUserBtn.setEnabled(false);
            usernameField.setEditable(false);
            emailField.setEditable(false);
        }


    }//GEN-LAST:event_userTableMouseClicked

    private boolean checkAvailbilityForUpdate(Integer row) {
        for (int i = 0; i < userTable.getRowCount(); i++) {
            if (row != i) {
                if (firstNameField.getText().equals(userTable.getValueAt(i, 1))) {
                    return false;
                }
            }
        }

        return true;
    }

    private void updateUserBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateUserBtnMouseClicked
        if (updateUserBtn.isEnabled()) {
            if (selectedRow > -1) {

                Integer id = selectedRow;

                if (id > -1) {
                    String firstName = firstNameField.getText().trim();
                    String lastName = lastNameField.getText().trim();
                    String userName = usernameField.getText().trim();
                    String email = emailField.getText().trim();
                    String password = passwordField.getText().trim();
                    String confirmPassword = passwordField.getText().trim();
                    String userType = userTypeCombo.getSelectedItem().toString().trim();
                    String address = addressField.getText().trim();
                    String phoneNo = phoneNoField.getText().trim();
            

                    User userModel = new User();
                    userModel.setAddress(address);
                    userModel.setEmail(email);
                    userModel.setUserName(userName);
                    userModel.setDesignation(userType);
                    userModel.setFirstName(firstName);
                    userModel.setLastName(lastName);
                    userModel.setPassword(password);
                    userModel.setPhoneNumber(phoneNo);
                    userModel.setStatus("Registered");
                    userModel.setUserId(id);
                    System.err.println("Called..");
                    if(firstName.trim().isEmpty() || lastName.trim().isEmpty() || userName.trim().isEmpty()
                            || password.trim().isEmpty() || confirmPassword.trim().isEmpty() || userType.trim().equals("Select User type")
                            || address.trim().isEmpty() || phoneNo.trim().isEmpty())
                    {
                        new MessageForm("Error","Some fields are missing.","error.png").setVisible(true);
                        return;
                    }
                    else if(!password.equals(confirmPassword))
                    {
                        new MessageForm("Error","Password does not match.","error.png").setVisible(true);
                        return;            
                    }
                    int check = userDaoImpl.update(userModel);

                    if(check>0)
                    {
                        fillDataIntoUserTable();
                        clearFields();
                        new MessageForm("Success","User has been updated successfully.","info.png").setVisible(true);
                    }else
                    {
                        new MessageForm("Error","Could not update the user, try again.","error.png").setVisible(true);
                    }

                } else {
                    new MessageForm("Error", "Please select record", "error.png").setVisible(true);
                }
            } else {
                new MessageForm("Error", "Please select record", "error.png").setVisible(true);
            }
        }
    }//GEN-LAST:event_updateUserBtnMouseClicked

    private void resetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseClicked
        clearFields();
        
    }//GEN-LAST:event_resetBtnMouseClicked

    private void deleteEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEmployeeActionPerformed
        if (selectedRow > -1) {
            Integer id = selectedRow;//(Integer) userTable.getValueAt(userTable.getSelectedRow(), 0);
            if (id == LoginFrame.userModel.getUserId()) {
                int option = JOptionPane.showConfirmDialog(null, "If you delete yourself you will be logged out");
                if (option == JOptionPane.YES_OPTION) {
                    deleteEmployee(id);
                    new LoginFrame().setVisible(true);
                    this.dispose();
                }
            } else {
                deleteEmployee(id);
                clearFields();
            }
        } else {
            new MessageForm("Error", "Please select record", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_deleteEmployeeActionPerformed

    private void userTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseReleased
        if (evt.isPopupTrigger()) {
            jPopupMenu1.show(userTable, evt.getX(), evt.getY());
        }        // TODO add your handling code here:
    }//GEN-LAST:event_userTableMouseReleased

    private void addUserBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserBtnMouseClicked
        if(addUserBtn.isEnabled()){
            String firstName = firstNameField.getText().trim();
            String lastName = lastNameField.getText().trim();
            String userName = usernameField.getText().trim();
            String email = emailField.getText().trim();
            String password = passwordField.getText().trim();
            String confirmPassword = passwordField.getText().trim();
            String userType = userTypeCombo.getSelectedItem().toString().trim();
            String address = addressField.getText().trim();
            String phoneNo = phoneNoField.getText().trim();

            User userModel = new User();
            userModel.setAddress(address);
            userModel.setUserName(userName);
            userModel.setEmail(email);
            userModel.setDesignation(userType);
            userModel.setFirstName(firstName);
            userModel.setLastName(lastName);
            userModel.setPassword(password);
            userModel.setPhoneNumber(phoneNo);
            userModel.setStatus("Registered");
            
            if(firstName.trim().isEmpty() || lastName.trim().isEmpty() || userName.trim().isEmpty()
                    || password.trim().isEmpty() || confirmPassword.trim().isEmpty() || userType.trim().equals("Select User type")
                    || address.trim().isEmpty() || phoneNo.trim().isEmpty())
            {
                new MessageForm("Error","Some fields are missing.","error.png").setVisible(true);
                return;
            }
            else if(!password.equals(confirmPassword))
            {
                new MessageForm("Error","Password does not match.","error.png").setVisible(true);
                return;            
            }
            UserDAO userDAO = new UserDaoImpl();
            int check = userDAO.registerUser(userModel);
            if(check>0)
            {
                fillDataIntoUserTable();
                clearFields();
                new MessageForm("Success","User has been registered successfully.","info.png").setVisible(true);
            }else
            {
                new MessageForm("Error","Could not save the user, try again.","error.png").setVisible(true);
            }
        }
    }//GEN-LAST:event_addUserBtnMouseClicked

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2MouseDragged

    private void deleteEmployee(Integer id) {
        int status = userDaoImpl.delete(id);

        if (status == 1) {
            fillDataIntoUserTable();
            //   new MessageForm("Information", "Record Deleted", "info.png").setVisible(true);
            clearFields();
        } else {
            new MessageForm("Error", "Error", "error.png").setVisible(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addUserBtn;
    private javax.swing.JTextArea addressField;
    private javax.swing.JTextField confirmPasswordField;
    private javax.swing.JMenuItem deleteEmployee;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField employeeSearch;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JTextField passwordField;
    private javax.swing.JTextField phoneNoField;
    private javax.swing.JLabel resetBtn;
    private javax.swing.JLabel updateUserBtn;
    private javax.swing.JTable userTable;
    private javax.swing.JComboBox<String> userTypeCombo;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
